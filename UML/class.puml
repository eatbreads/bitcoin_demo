@startuml
title 简化版区块链系统类图

!define CORE_COLOR #E1F5FE
!define NETWORK_COLOR #F3E5F5
!define API_COLOR #E8F5E8

package "核心组件" CORE_COLOR {
    class Block {
        +timestamp: u128
        +transactions: Vec<Transaction>
        +prev_block_hash: String
        +hash: String
        +nonce: i32
        +height: i32
        --
        +new_block(transactions, prev_hash, height): Block
        +get_hash(): String
    }
    
    class Blockchain {
        +tip: String
        +db: sled::Db
        --
        +new(): Blockchain
        +create_blockchain(address): Blockchain
        +mine_block(transactions): Block
        +add_block(block): Result<()>
        +get_block(hash): Block
    }
    
    class Transaction {
        +id: String
        +vin: Vec<TXInput>
        +vout: Vec<TXOutput>
        --
        +new_UTXO(from, to, amount): Transaction
        +hash(): String
        +sign(wallet): Result<()>
    }
    
    class TXInput {
        +txid: String
        +vout: i32
        +signature: Vec<u8>
        +pub_key: Vec<u8>
    }
    
    class TXOutput {
        +value: i32
        +pub_key_hash: Vec<u8>
        --
        +lock(address): TXOutput
        +is_locked_with_key(pub_key_hash): bool
    }
}

package "钱包系统" CORE_COLOR {
    class Wallet {
        +private_key: Vec<u8>
        +public_key: Vec<u8>
        --
        +new(): Wallet
        +get_address(): String
        +sign(data): Vec<u8>
    }
    
    class Wallets {
        +wallets: HashMap<String, Wallet>
        --
        +new(): Wallets
        +create_wallet(): String
        +get_wallet(address): Wallet
    }
}

package "UTXO管理" CORE_COLOR {
    class UTXOSet {
        +blockchain: Blockchain
        --
        +find_spendable_outputs(address, amount): (i32, HashMap)
        +reindex(): Result<()>
        +update(block): Result<()>
    }
}

package "网络层" NETWORK_COLOR {
    class Server {
        +node_address: String
        +known_nodes: Vec<String>
        --
        +start_server(): Result<()>
        +send_data(addr, data): Result<()>
    }
}

package "接口层" API_COLOR {
    class CLI {
        --
        +run(): Result<()>
    }
    
    class API {
        --
        +create_wallet(): String
        +get_balance(address): i32
        +send_transaction(from, to, amount): Result<()>
    }
}

' 核心关系
Blockchain ||--o{ Block : contains
Block ||--o{ Transaction : contains
Transaction ||--o{ TXInput : has
Transaction ||--o{ TXOutput : has
UTXOSet ||--|| Blockchain : manages
Wallets ||--o{ Wallet : contains

' 使用关系
CLI ..> Blockchain : uses
CLI ..> Wallets : uses
CLI ..> UTXOSet : uses
API ..> Blockchain : uses
API ..> Wallets : uses
Server ..> Blockchain : uses

@enduml